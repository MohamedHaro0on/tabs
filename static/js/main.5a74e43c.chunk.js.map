{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","loading","setLoading","currentIndex","setCurrentIndex","useEffect","axios","get","then","response","i","j","k","console","log","output","className","dates","duties","company","title","map","index","id","onClick","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOA0EeA,EApEH,WAAK,IAAD,EACYC,mBAAU,IADtB,mBACPC,EADO,KACAC,EADA,OAEiBF,oBAAU,GAF3B,mBAEPG,EAFO,KAEGC,EAFH,OAG2BJ,mBAAU,GAHrC,mBAGPK,EAHO,KAGQC,EAHR,KAcdC,qBAAY,WATVC,IAAMC,IAPG,6CAOMC,MAAK,SAACC,GACnBT,EAASS,EAASV,MAClBG,GAAW,GACX,IAAIQ,EAAI,EAAOC,EAAI,EAAOC,EAAI,EAAG,IAAKF,EAAI,EAAGA,EAAI,EAAGA,IAAOE,GAAKD,EAAGA,GAAQ,EAC3EE,QAAQC,IAAI,kBAAoBF,QAOjC,IAGH,IAKIG,EAAS,KAEb,GAAId,EACFc,EAAS,qBAAKC,UAAY,cAAjB,iCAEN,CAAC,IAAD,EACsCjB,EAAKI,GAAzCc,EADF,EACEA,MAAQC,EADV,EACUA,OAASC,EADnB,EACmBA,QAAUC,EAD7B,EAC6BA,MAChCL,EACE,qCACE,oBAAIC,UAAY,cAAhB,0BACA,sBAAKA,UAAY,YAAjB,UACE,6BACGjB,EAAKsB,KAAI,WAAmBC,GAAS,IAA1BH,EAAyB,EAAzBA,QAAUI,EAAe,EAAfA,GACpB,OACE,6BACE,wBAAQC,QAAW,WAnBjCpB,EAmBiDkB,IAAQN,UAAaM,IAAUnB,EAAe,SAAW,KAA5F,SAAoGgB,KAD3FI,QAMjB,oCACE,oBAAIP,UAAY,QAAhB,SAAyBI,IACzB,oBAAIJ,UAAY,WAAhB,SAA4BG,IAC5B,mBAAGH,UAAY,OAAf,SAAuBC,IACvB,6BACGC,EAAOG,KAAI,SAACI,EAASH,GACpB,OACE,mCAA8BG,EAA9B,MAAWA,EAAUH,QAI3B,wBAAQN,UAAY,SAApB,kCAMV,OACE,+BACGD,KCzDQW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5a74e43c.chunk.js","sourcesContent":["import './App.css';\nimport {useState , useEffect} from \"react\";\nimport axios from \"axios\";\n\nconst URL =  'https://course-api.com/react-tabs-project'\n\nconst App = ()=>{\n  const [data , setData ] = useState ([]);\n  const [loading , setLoading] = useState (true) ;\n  const [currentIndex , setCurrentIndex] = useState (0);\n  const FetchData = ()=>{\n    axios.get(URL).then((response)=>{\n      setData (response.data);\n      setLoading(false);\n      let i = 3; let j = 4; let k = 1; for (i = 0; i < 3; i++) { k += j; j = j - 1; }\n      console.log(\"THe Value or k \" , k )\n      \n    })\n  }\n\n  useEffect ( ()=>{\n    FetchData();\n  }, [])\n\n\n  const TabsHandler = (idx)=>{\n    setCurrentIndex(idx);\n  }\n\n\n  let output = null ;\n  \n  if (loading){\n    output = <div className = \"MainHeading\"> Loading ..!!! </div>\n  }\n  else {\n    let {dates , duties , company , title} = data[currentIndex];\n    output = (\n      <>\n        <h1 className = \"MainHeading\"> Experience </h1>\n        <div className = \"Container\">\n          <ul>\n            {data.map(({company , id } , index)=>{\n              return(\n                <li key = {id}>\n                  <button onClick = {()=>TabsHandler(index)} className = {index === currentIndex ? \"Active\" : null }>{company}</button>\n                </li>\n              )\n            })}\n          </ul>\n          <article>\n            <h2 className = \"Title\">{title}</h2>\n            <h3 className = \"Comapany\">{company}</h3>\n            <p className = \"Date\">{dates}</p>\n            <ol>\n              {duties.map((element ,index )=>{\n                return(\n                  <li key = {element + index}> {element} </li>\n                )\n              })}\n            </ol>\n            <button className = \"Button\"> More Info </button>\n          </article>\n        </div>\n      </>\n    )\n  }\n  return (\n    <main>\n      {output}\n    </main>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}